Структура проекта (\Haar_cascad):

\data - папка, в которую будут положены результаты обучения каскада Хаара
\LIGHT - папка для обучения распознавания светофора
	\1 (\2 и т.д) - папки с готовым проектом (после обучения)
	\good - папка с положительными изображениями
\SIGNS - папка для обучения распознавания знаков дорожного движения 
	\1 (\2 и т.д) - папки с готовым проектом (после обучения)
	\good
\bad - папка с отрицательными изображениями (сюда в перемешку скидывать файлы из каждой папки good (примерно 
по 200 фото каждого объекта), кроме положительных фото объекта, который мы собираемся распознавать)
\good - папка с положительными изображениями (копируем сюда все фото объекта из папки good, который нужно
распознать)
constants_lines.py - программа, в которой сохранены константы для знаков дорожного движения, светофора
get_img_from_video.py - программа для получения набора изображений из видеопотока
get_positive_img.py - программа для разметки положительных изображений
haar_cascade_train.py - программа для обучения каскада Хаара
detect_sign.py - распознавание объектов с помощью обученного каскада Хаара

1. Нужно получить набор положительных (где присутствует объект распознавания) и отрицательных 
(где отсутствует объект распознавания) изображений и сохранить их в две разные папки. 
«Good» — папка с позитивными изображениями, «Bad» — с отрицательными.

	1.1. Отрицательные изображения 
	Для получения отрицательных изображений используется программа get_img_from_video.py, 
	с помощью которой можно получить набор изображений из видеопотока в режиме реального времени
	или из заранее снятого видео. 
	Предварительно в файле get_img_from_video.py нужно импортировать переменную BAD_FOLDER
	из программы с константами (constant.py).

	1.2. Положительные изображения
	Для получения положительных изображений также используется программа get_img_from_video.py.
	Аналогично п. 1.1. предварительно в файле get_img_from_video.py нужно импортировать переменную 
	GOOD_FOLDER из программы с константами. 
	Затем, с помощью программы get_positive_img.py нужно вырезать из каждого сохраненного изображения
	объект распознавания. (Нужно запустить программу и мышкой выделять область на изображении, 
	которая будет обрезана и сохранена в папку GOOD_FOLDER).

	!!!После создания двух папок с изображениями нужно обязательно поменять в файле constants 2 переменные:
	NUM_OF_GOOD - общее количество имеющихся положительных примеров
	NUMBAD - общее количество имеющихся отрицательных примеров

2. Создание двух текстовых файлов с описанием положительных и отрицательных изображений - 
good.txt и bad.txt
	
	Файлы создаются перед обучением каскада в программе haar_cascade_train.py

3. Обучение каскада Хаара

	3.1. Константы
	Перед тем, как обучать каскад Хаара нужно изменить файл constants, если это необходимо. В данном
	файле находятся настройки для обучения, а также пути к разным файлам, которые будут нужны для обучения.
	
	3.2. Обучение каскада
	Для того, чтобы обучить каскад Хаара нужно запустить программу haar_cascade_train.py. 

4. Тестирование

	С помощью программы detect_sign.py тестируется каскад. В программе нужно указать путь к тестовому видеофайлу
(либо вебкамеру) и загрузить обученные каскады. 
	
		